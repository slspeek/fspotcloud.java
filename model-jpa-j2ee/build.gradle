description = 'Model JPA J2EE Implementation'

configurations {
    daoTests
    modelTests
    testCompile.extendsFrom(daoTests, modelTests)
    testRuntime
}

dependencies {
    compile project(':rpc')
    compile project(':model-api')
    compile project(':model-jpa')
    compile libs.commons_lang
    compile libs.inject
    compile libs.guice
    compile "org.hibernate:hibernate-core:4.0.0.Final"
    compile "javassist:javassist:3.12.0.GA"
    compile "org.hibernate:hibernate-entitymanager:4.0.0.Final"
    compile libs.derby_all
    compile libs.jta
    compile libs.gwt_dispatch
    compile libs.jdo_api
    compile libs.guice_servlet

    testCompile project(path:":model-api", configuration: "testCompile")
    testCompile libs.guiceberry
    testCompile libs.junit
    testCompile libs.mockito
    testCompile libs.guava_testlib
    testCompile "org.slf4j:slf4j-log4j12:1.6.4"
    daoTests libs.simple_jpa_dao_namedid_test
    modelTests files("../model-api/build/libs/model-api-${version}-tests.jar")
}

task unpackTest << {
    mkdir "$buildDir/dao-test"
    myTests = configurations.daoTests.files.iterator().next()
    ant.unjar(dest: "$buildDir/dao-test", src: myTests)
    mkdir "$buildDir/model-test"
    myTests = configurations.modelTests.files.iterator().next()
    ant.unjar(dest: "$buildDir/model-test", src: myTests)
}

task photoDaoTest(type: Test, dependsOn: [classes, unpackTest]) {

    testClassesDir = file("$buildDir/dao-test")
    classpath = sourceSets.test.runtimeClasspath
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.simplejpadao.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.fspotcloud.server.model.test.PhotoGuiceBerryEnv'
    testResultsDir file("${project.testResultsDir}/photo")
}

task tagDaoTest(type: Test, dependsOn: [classes, unpackTest]) {
    testClassesDir = file("$buildDir/dao-test")
    classpath = sourceSets.test.runtimeClasspath
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.simplejpadao.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.fspotcloud.server.model.test.TagGuiceBerryEnv'
    testResultsDir file("${project.testResultsDir}/tag")
}

task peerDatabaseDaoTest(type: Test, dependsOn: [classes, unpackTest]) {
    testClassesDir = file("$buildDir/dao-test")
    classpath = sourceSets.test.runtimeClasspath
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.simplejpadao.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.fspotcloud.server.model.test.PeerDatabaseGuiceBerryEnv'
    testResultsDir file("${project.testResultsDir}/peerdatabase")
}

task modelTest(type: Test, dependsOn: [classes, unpackTest]) {
    testClassesDir = file("$buildDir/model-test")
    classpath = sourceSets.test.runtimeClasspath
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.fspotcloud.model.api.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.fspotcloud.server.model.test.J2eeModelGuiceBerryEnv'
    testResultsDir file("${project.testResultsDir}/model")
}

check.dependsOn photoDaoTest, tagDaoTest, peerDatabaseDaoTest, modelTest