<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
    <parent>
    	<artifactId>fspotcloud</artifactId>
		<groupId>fspotcloud</groupId>
		<version>0.39</version>
    </parent>
	<groupId>fspotcloud</groupId>
	<artifactId>server</artifactId>
	<version>0.39</version>

	<name>F-SpotCloud Server Component</name>
	<description>The controller and data reading</description>
	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>rpc</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>model-api</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>model</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>model</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
		</dependency>
		<dependency>
			<groupId>${project.groupId}.deps</groupId>
			<artifactId>mapreduce-deps</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>${project.groupId}.deps</groupId>
			<artifactId>aecs-deps</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>

		<dependency>
			<groupId>${project.groupId}.deps</groupId>
			<artifactId>cloudcover-deps</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>

		<!-- Jars for GIN -->
		<dependency>
			<groupId>com.googlecode.gwt.inject</groupId>
			<artifactId>gin</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}.deps</groupId>
			<artifactId>guice-deps</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>org.jmock</groupId>
			<artifactId>jmock</artifactId>
			<version>2.5.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>${project.groupId}.deps</groupId>
			<artifactId>appengine-deps</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>${project.groupId}.deps</groupId>
			<artifactId>gwt-deps</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>${project.groupId}.deps</groupId>
			<artifactId>servlet-deps</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>
		<!-- Test scope -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<!--
			GAE libraries for local testing as described here:
			http://code.google.com/appengine/docs/java/howto/unittesting.html
		-->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-local-runtime</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>aopalliance</groupId>
			<artifactId>aopalliance</artifactId>
			<version>1.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>${project.groupId}.deps</groupId>
			<artifactId>xmlrpc-server-deps</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<!--
				This plug-in "enhances" your domain model objects (i.e. makes them
				persistent for datanucleus)
			-->


			<!--
				The actual maven-gae-plugin. Type "mvn gae:run" to run project, "mvn
				gae:deploy" to upload to GAE.
			-->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>0.6.0</version>
			</plugin>

			<!--
				Upload application to the appspot automatically, during
				release:perform
			-->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>
			<!--  To include the test-jar for cloudcover -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<!-- Specify hard-coded project properties here -->
	<properties>
		<!--
			This is just for "eclipse:eclipse" goal to always attempt downloading
			sources
		-->
		<downloadSources>true</downloadSources>
		<!--
			Upload to http://0.latest.<applicationName>.appspot.com by default
		-->
		<gae.application.version>5</gae.application.version>
		<!-- port defaults to 8080 -->
		<gae.port>8080</gae.port>
		<!--
			Produce detailed JS during GWT compilation for development
			environment
		-->
		<gwt.style>DETAILED</gwt.style>
	</properties>
	<profiles>
		<!--
			We can configure our integration server to activate this profile and
			perform gae:deploy, thus uploading latest snapshot to the
			http://1.latest.<applicationName>.appspot.com automatically
		-->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>1</gae.application.version>
				<!-- Produce pretty JS during GWT compilation for test environment -->
				<gwt.style>PRETTY</gwt.style>
			</properties>
		</profile>
		<!--
			This profile will activate automatically during release and upload
			application to the http://2.latest.<applicationName>.appspot.com (We
			might want to set the 2nd version as our applications Default version
			to be accessible at http://<applicationName>.appspot.com)
		-->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<!--
					During release, set application version in appengine-web.xml to 2
				-->
				<gae.application.version>2</gae.application.version>
				<!--
					Produce compressed JS during GWT compilation for production
					environment
				-->
				<gwt.style>OBFUSCATED</gwt.style>
			</properties>
		</profile>
	</profiles>
	<repositories>
		<repository>
			<id>DataNucleus_Repos2</id>
			<name>DataNucleus Repository</name>
			<url>http://www.datanucleus.org/downloads/maven2</url>
		</repository>
		<repository>
			<id>maven-gae-plugin-repo</id>
			<name>maven-gae-plugin repository</name>
			<url>
                http://maven-gae-plugin.googlecode.com/svn/repository
            </url>
		</repository>
		<repository>
			<id>guice-maven</id>
			<name>guice maven</name>
			<url>http://guice-maven.googlecode.com/svn/trunk</url>
		</repository>
		<repository>
			<id>fspotcloud-maven</id>
			<url>
        http://maven.fspotcloud.googlecode.com/hg/repo
			</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>DataNucleus_2</id>
			<url>http://www.datanucleus.org/downloads/maven2/</url>
		</pluginRepository>
		<pluginRepository>
			<id>maven-gae-plugin-repo</id>
			<name>maven-gae-plugin repository</name>
			<url>http://maven-gae-plugin.googlecode.com/svn/repository</url>
		</pluginRepository>
	</pluginRepositories>
</project>
