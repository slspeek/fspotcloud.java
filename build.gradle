apply from: 'libraries.gradle'

buildscript {
    repositories {
        mavenCentral()
        add(new org.apache.ivy.plugins.resolver.URLResolver()) {
            name = 'GitHub'
            addArtifactPattern 'http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]'
        }
        maven {
            url "http://fspotcloud-maven.googlecode.com/svn/maven/repository"

        }
        maven {
            url "http://localhost:9090/nexus/content/groups/public"
        }
        mavenLocal()
    }

    dependencies {
        classpath 'bmuschko:gradle-gae-plugin:0.7.3'
        classpath 'bmuschko:gradle-tomcat-plugin:0.9.1'
        classpath 'desource:gradle-gwt-plugin:0.3-SNAPSHOT'
    }
}

allprojects {
    apply plugin: 'maven'
    apply plugin: 'idea'
    apply plugin: 'eclipse'

    group = 'com.googlecode.fspotcloud'
    version = '0.7-alpha-02'
}

subprojects {
    configurations {
        jalopy
    }
    apply plugin: 'java'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6
    //ext.libs = libs

    dependencies {
        jalopy 'jalopy:jalopy-ant:0.1-1.5b5', 'jalopy:jalopy:1.5rc3'
    }

    task jalopy(dependsOn: classes) << {

        ant.taskdef(name: 'jalopy',
                classname: 'de.hunsicker.jalopy.plugin.ant.AntPlugin',
                classpath: configurations.jalopy.asPath)
        if (file("src/main/java").isDirectory()) {
            ant.jalopy(convention: "${rootDir}/config/jalopy/jalopy-convention.xml") {
                fileset(dir: "src/main/java") {
                    include(name: '**/*.java')
                }
            }
        }
        if (file("src/test/java").isDirectory()) {
            ant.jalopy(convention: "${rootDir}/config/jalopy/jalopy-convention.xml") {
                fileset(dir: "src/test/java") {
                    include(name: '**/*.java')
                }

            }
        }
    }
    if ("${release}" == "true") {
        apply plugin: 'jdepend'
        apply plugin: 'findbugs'
        apply plugin: 'checkstyle'
        checkstyle {
            configFile = file("../config/checkstyle/checkstyle.xml")
        }

        [checkstyleMain, checkstyleTest]*.ignoreFailures = true
        findbugs {
            ignoreFailures = true
        }

        findbugsTest.enabled = false
        checkstyleTest.enabled = false
        check.dependsOn jalopy

    }
    test {
        jvmArgs "-XX:MaxPermSize=256m"
    }

    repositories {
        maven {
            url maven_repo
            artifactUrls "http://fspotcloud-maven.googlecode.com/svn/maven/repository",
                    "http://maven.fspotcloud.googlecode.com/hg/repo",
                    "http://maven-gae-plugin.googlecode.com/svn/repository",
                    "http://gwt-maven.googlecode.com/svn/trunk/mavenrepo/",
                    "http://www.datanucleus.org/downloads/maven2"
        }
        mavenLocal()
    }

}


