import org.apache.tools.ant.filters.ReplaceTokens

description = 'Gae war'

apply plugin: 'war'

apply plugin: 'gae'
System.properties['appengine.sdk.root'] = System.properties['user.home'] + "/appengine-java-sdk-${gae_version}"
findbugsTest.enabled = false;
gae {
    stopKey = 'STOP'
    disableUpdateCheck = true
    daemon = true
}

configurations {
}

dependencies {
    compile project(':server-module-gae')

    testCompile project(':test-util')
    testCompile project(':peer')
    testCompile project(path: ':e2e-test', configuration: 'testCompile')
    testCompile "org.seleniumhq.selenium:selenium:2.0b3"
    testCompile "org.seleniumhq.selenium.client-drivers:selenium-java-client-driver:1.0.2"
    testCompile libs.guiceberry
    testCompile libs.guava_testlib
    testCompile libs.junit
}

task initconfig(type: Copy) {
    from('src/main/config') {
        include '**/properties.properties'
        filter(ReplaceTokens, tokens: [BOT_SECRET: "${bot_secret}".toString()])
    }
    from('src/main/config') {
        exclude '**/properties.properties'
    }
    into 'build/target/config'
}

task unpackJavascript(dependsOn: ':client:javascriptJar') << {
    myTests = file("../client/build/libs/client-${version}-javascript.jar")
    ant.unjar(dest: "$buildDir/javascript/", src: myTests)
}

task unpackTest << {
    myTests = file("../e2e-test/build/libs/e2e-test-${version}-tests.jar")
    ant.unjar(dest: "$buildDir/classes/test", src: myTests)
}

task peerStop(type: Exec) {

    commandLine "telnet", "localhost", "4444"
    ignoreExitValue = true
}

task peerRun(type: Exec, dependsOn: ':peer:jar') {
    commandLine "screen", "-d","-m", "../peer/peer_run.sh", "${version}", "${bot_secret}", "localhost:8080"
}

test.dependsOn gaeRun, peerRun, unpackTest

test {
    systemProperties['GuiceBerryEnvSelectorOverride_com.googlecode.fspotcloud.test.EmptyGuiceBerryEnv'] =
        'com.googlecode.fspotcloud.test.GaeWarGuiceBerryEnv'
    include "com/googlecode/fspotcloud/test/LocalSuite.class"
    testLogging.showStandardStreams = true
}

war {
    from 'build/target/config'
    from "build/javascript"
}

war.dependsOn initconfig, unpackJavascript

clean.dependsOn gaeStop, peerStop

test << {
    println "Stopping GAE-server"
    gaeStop.execute()
    println "Stopping peer"
    peerStop.execute()
}

